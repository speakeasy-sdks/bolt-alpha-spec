// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
)

type OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddressType string

const (
	OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddressTypeExplicit OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddressType = "explicit"
	OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddressTypeID       OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddressType = "id"
)

type OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddress struct {
	AddressID            *AddressID
	AddressExplicitInput *AddressExplicitInput

	Type OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddressType
}

func CreateOnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddressExplicit(explicit AddressExplicitInput) OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddress {
	typ := OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddressTypeExplicit
	typStr := string(typ)
	explicit.DotTag = typStr

	return OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddress{
		AddressExplicitInput: &explicit,
		Type:                 typ,
	}
}

func CreateOnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddressID(id AddressID) OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddress {
	typ := OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddressTypeID
	typStr := string(typ)
	id.DotTag = typStr

	return OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddress{
		AddressID: &id,
		Type:      typ,
	}
}

func (u *OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddress) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	type discriminator struct {
		DotTag string
	}

	dis := new(discriminator)
	if err := json.Unmarshal(data, &dis); err != nil {
		return fmt.Errorf("could not unmarshal discriminator: %w", err)
	}

	switch dis.DotTag {
	case "explicit":
		d = json.NewDecoder(bytes.NewReader(data))
		addressExplicitInput := new(AddressExplicitInput)
		if err := d.Decode(&addressExplicitInput); err != nil {
			return fmt.Errorf("could not unmarshal expected type: %w", err)
		}

		u.AddressExplicitInput = addressExplicitInput
		u.Type = OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddressTypeExplicit
		return nil
	case "id":
		d = json.NewDecoder(bytes.NewReader(data))
		addressID := new(AddressID)
		if err := d.Decode(&addressID); err != nil {
			return fmt.Errorf("could not unmarshal expected type: %w", err)
		}

		u.AddressID = addressID
		u.Type = OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddressTypeID
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u OnepaymentsPostRequestBodyContentApplication1jsonSchemaPropertiesCartPropertiesShipmentsItemsPropertiesAddress) MarshalJSON() ([]byte, error) {
	if u.AddressID != nil {
		return json.Marshal(u.AddressID)
	}

	if u.AddressExplicitInput != nil {
		return json.Marshal(u.AddressExplicitInput)
	}

	return nil, nil
}
